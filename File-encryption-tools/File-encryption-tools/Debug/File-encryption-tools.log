  main.cpp
c:\boost_1_66_0\boost\random\traits.hpp(71): error C2338: (std::numeric_limits<T>::is_signed == false) || (std::numeric_limits<T>::is_bounded == false)
  c:\boost_1_66_0\boost\random\traits.hpp(90): note: 参见对正在编译的 类 模板 实例化 "boost::random::traits::make_unsigned_or_unbounded_imp<T,false>" 的引用
          with
          [
              T=DataType
          ]
  c:\boost_1_66_0\boost\random\uniform_int_distribution.hpp(55): note: 参见对正在编译的 类 模板 实例化 "boost::random::traits::make_unsigned_or_unbounded<T>" 的引用
          with
          [
              T=DataType
          ]
  c:\boost_1_66_0\boost\random\uniform_int_distribution.hpp(248): note: 参见对正在编译的函数 模板 实例化“T boost::random::detail::generate_uniform_int<Engine,T>(Engine &,T,T,boost::mpl::true_)”的引用
          with
          [
              T=DataType,
              Engine=boost::random::mt19937
          ]
  c:\boost_1_66_0\boost\random\uniform_int_distribution.hpp(371): note: 参见对正在编译的函数 模板 实例化“T boost::random::detail::generate_uniform_int<Engine,IntType>(Engine &,T,T)”的引用
          with
          [
              T=DataType,
              Engine=boost::random::mt19937,
              IntType=DataType
          ]
  c:\file-encryption-tools\file-encryption-tools\file-encryption-tools\main.cpp(17): note: 参见对正在编译的函数 模板 实例化“boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<1024,1024,boost::multiprecision::signed_magnitude,boost::multiprecision::unchecked,void>,boost::multiprecision::et_off> boost::random::uniform_int_distribution<DataType>::operator ()<boost::random::mt19937>(Engine &) const”的引用
          with
          [
              Engine=boost::random::mt19937
          ]
  c:\file-encryption-tools\file-encryption-tools\file-encryption-tools\main.cpp(17): note: 参见对正在编译的函数 模板 实例化“boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<1024,1024,boost::multiprecision::signed_magnitude,boost::multiprecision::unchecked,void>,boost::multiprecision::et_off> boost::random::uniform_int_distribution<DataType>::operator ()<boost::random::mt19937>(Engine &) const”的引用
          with
          [
              Engine=boost::random::mt19937
          ]
  c:\boost_1_66_0\boost\multiprecision\cpp_int.hpp(436): note: 参见对正在编译的 类 模板 实例化 "boost::multiprecision::backends::cpp_int_base<1024,1024,boost::multiprecision::signed_magnitude,boost::multiprecision::unchecked,Allocator,false>::data_type" 的引用
          with
          [
              Allocator=void
          ]
  c:\boost_1_66_0\boost\multiprecision\cpp_int.hpp(1041): note: 参见对正在编译的 类 模板 实例化 "boost::multiprecision::backends::cpp_int_base<1024,1024,boost::multiprecision::signed_magnitude,boost::multiprecision::unchecked,Allocator,false>" 的引用
          with
          [
              Allocator=void
          ]
  c:\boost_1_66_0\boost\multiprecision\number.hpp(1671): note: 参见对正在编译的 类 模板 实例化 "boost::multiprecision::backends::cpp_int_backend<1024,1024,boost::multiprecision::signed_magnitude,boost::multiprecision::unchecked,void>" 的引用
  c:\file-encryption-tools\file-encryption-tools\file-encryption-tools\bignum.hpp(14): note: 参见对正在编译的 类 模板 实例化 "boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<1024,1024,boost::multiprecision::signed_magnitude,boost::multiprecision::unchecked,void>,boost::multiprecision::et_off>" 的引用
